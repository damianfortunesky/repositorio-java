version: "3.9"

services:
  postgres:
    image: postgres:16
    container_name: cocoaromas_db
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
      TZ: ${DB_TIMEZONE}
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init:/docker-entrypoint-initdb.d
    networks:
      - backend_net

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      TZ: ${DB_TIMEZONE}
    ports:
      - "5050:80"
    depends_on:
      - postgres
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - backend_net

  cocoaromas-api:
    build: .
    container_name: cocoaromas_api
    restart: always
    environment:
      # Spring Datasource
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:${DB_PORT}/${DB_NAME}
      SPRING_DATASOURCE_USERNAME: ${DB_USER}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD}
      SPRING_JPA_PROPERTIES_HIBERNATE_JDBC_TIME_ZONE: ${DB_TIMEZONE}

      # JWT (inyectados en JwtProperties)
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      JWT_EXPIRATION: ${JWT_EXPIRATION}
      JWT_ISSUER: ${JWT_ISSUER}

    ports:
      - "8080:8080"
    depends_on:
      - postgres
    networks:
      - backend_net

networks:
  backend_net:
    driver: bridge

volumes:
  postgres_data:
  pgadmin_data:
